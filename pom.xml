<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<!-- POM file generated with GWT webAppCreator -->
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.glom.web</groupId>
	<artifactId>gwt-glom</artifactId>
	<packaging>war</packaging>
	<version>1.21.10</version>
	<name>OnlineGlom</name>

	<licenses>
		<license>
			<name>LGPL v3</name>
			<distribution>repo and manual</distribution>
			<url>http://www.gnu.org/licenses/lgpl.html</url>
		</license>
	</licenses>

	<!-- gwt-test-utils is not in the regular maven repository: -->
	<repositories>
		<repository>
			<id>forge.octo.com</id>
			<url>http://forge.octo.com/nexus/content/repositories/releases/</url>
		</repository>
	</repositories>

	<properties>
		<!-- Convenience property to set the GWT version -->
		<gwt.version>2.5.0</gwt.version>
		<!-- GWT requires java 1.6 -->
		<!-- TODO: Isn't this a duplicate of the maven-compiler-plugin properties below? -->
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
		<webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>${gwt.version}</version>
			<scope>compile</scope>  <!-- It is used for runtime and test scopes -->
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>c3p0</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.1.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.1-901.jdbc4</version>
			<type>jar</type>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis</artifactId>
			<version>2.0.2</version>
			<scope>compile</scope>
		</dependency>    
		<dependency>
			<groupId>com.allen-sauer.gwt.log</groupId>
			<artifactId>gwt-log</artifactId>
			<version>3.1.8</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.2.2</version>
		</dependency>   
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.7</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>13.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq</artifactId>
			<version>2.6.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports</artifactId>
			<version>4.8.0</version>
			<scope>compile</scope>
			<exclusions>
				<!-- There is apparently a clash between the jdtcore used by jasperreports
					and gwt, so we do this to avoid the reportUnusedDeclaredThrownExceptionIncludeDocCommentReference
					exception during the gwt compile. -->
				<exclusion>
					<groupId>eclipse</groupId>
					<artifactId>jdtcore</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
			<type>jar</type>
			<scope>compile</scope> <!-- It is used for runtime and test scopes -->
		</dependency>

		<!-- This seems to be necessary so we can see errors from JDBC -->		
		<dependency>
			<groupId>org.slf4j</groupId>
 			<artifactId>slf4j-simple</artifactId>
			<version>1.7.2</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.googlecode.gwt-test-utils</groupId>
			<artifactId>gwt-test-utils</artifactId>
			<version>0.43</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>3.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<url>http://www.glom.org/wiki/index.php?title=Development/OnlineGlom</url>
	<build>
		<!-- Generate compiled stuff in the folder used for developing mode -->
		<outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>

		<plugins>

			<!-- GWT Maven Plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>2.5.0</version>
				<executions>
					<execution>
						<goals>
							<goal>i18n</goal>
							<goal>compile</goal>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
				<!-- Plugin configuration. There are many available options, see gwt-maven-plugin
					documentation at codehaus.org -->
				<configuration>
					<runTarget>OnlineGlom.html</runTarget>
					<hostedWebapp>${webappDirectory}</hostedWebapp>
					<i18nConstantsBundles>
						<i18nConstantsBundle>org.glom.web.client.ui.OnlineGlomConstants</i18nConstantsBundle>
					</i18nConstantsBundles>
					<mode>htmlunit</mode> <!-- Because the default, manual, waits for us to paste a URL into a browser. -->
					<!-- <productionMode>true</productionMode> -->
				</configuration>
			</plugin>

			<!-- Copy static web files before executing gwt:run -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.2</version>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>exploded</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<webappDirectory>${webappDirectory}</webappDirectory>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<descriptors>
						<descriptor>assembly.xml</descriptor>
					</descriptors>
					<appendAssemblyId>false</appendAssemblyId>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>   
				<version>2.5.1</version>       
				<configuration>
					<source>1.7</source>
 					<target>1.7</target>
				</configuration>
			</plugin>

			<!-- This lets us do
			mvn dependency:analyze-report
			to generate target/dependency-analysis.html
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
  						<id>copy</id>
						<phase>package</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>gwt-maven-plugin</artifactId>
										<versionRange>[2.5.0,)</versionRange>
										<goals>
											<goal>i18n</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-war-plugin
										</artifactId>
										<versionRange>
											[2.1.1,)
										</versionRange>
										<goals>
											<goal>exploded</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.12</version>
				<configuration>
					<!-- your configuration here -->
				</configuration>
			</plugin>
		</plugins>

	</reporting>

	<description>gwt-glom (OnlineGlom) is a web UI for Glom database systems.
See http://www.glom.org
</description>
	<scm>
		<url>http://gitorious.org/online-glom</url>
	</scm>
	<issueManagement>
		<system>Bugzilla</system>
		<url>https://bugzilla.gnome.org/browse.cgi?product=Glom</url>
	</issueManagement>
</project>
