<?xml version="1.0" encoding="utf-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">

	<!-- Servlets -->
	<servlet>
		<servlet-name>gwtGlomServlet</servlet-name>
		<servlet-class>org.glom.web.server.OnlineGlomServiceImpl</servlet-class>
	</servlet>
	
	<servlet>
		<servlet-name>gwtGlomImagesServlet</servlet-name>
		<servlet-class>org.glom.web.server.OnlineGlomImagesServlet</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>gwtGlomLoginServlet</servlet-name>
		<servlet-class>org.glom.web.server.OnlineGlomLoginServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>gwtGlomServlet</servlet-name>
		<url-pattern>/OnlineGlom/gwtGlom</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>gwtGlomImagesServlet</servlet-name>
		<url-pattern>/OnlineGlom/gwtGlomImages</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>gwtGlomLoginServlet</servlet-name>
		<url-pattern>/OnlineGlom/gwtGlomLogin</url-pattern>
	</servlet-mapping>

	<!-- Default page to serve -->
	<welcome-file-list>
		<welcome-file>OnlineGlom.html</welcome-file>
	</welcome-file-list>
	
	<!-- We do not do this, to demand HTTPS for the login servlet,
             because its isAuthenicated method can succeed based on
             the configuration file, with no transmission of 
	     credentials from the client.
	     Instead, the client refuses to send the credentials
             if it is not using HTTPS, and the server refuses 
             to examine any transmitted credentials if did
	     not receive them via HTTPS.
	<security-constraint>
       		<web-resource-collection>
			<url-pattern>/OnlineGlom/gwtGlomLogin/*</url-pattern>
		</web-resource-collection>
		<user-data-constraint>
			<transport-guarantee>CONFIDENTIAL</transport-guarantee>
		</user-data-constraint>
	</security-constraint>
        -->

	<!--  Filter all requests through spring-security: -->        
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

</web-app>
